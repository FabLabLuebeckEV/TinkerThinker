name: ESP32 PlatformIO Build & Release

on:
  push:
    branches: [ main ]
    paths:
      - '**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11 (stable for PIO)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache PlatformIO core and packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
          key: pio-${{ runner.os }}-${{ hashFiles('platformio.ini') }}

      - name: Prepare PlatformIO directories
        run: |
          mkdir -p ~/.platformio/packages ~/.platformio/platforms ~/.platformio/cache || true

      - name: Install PlatformIO
        run: pip install --upgrade platformio

      - name: Show PlatformIO version
        run: pio --version

      - name: Prepare CI PlatformIO config (relax warnings)
        run: |
          mkdir -p .pio
          awk '
            {
              print $0;
              if ($0 ~ /^\[env:esp32dev\]/) {
                print "build_unflags = -Werror";
                print "build_flags = -Wno-error=deprecated-declarations -Wno-error=unused-variable -Wno-error=unused-parameter";
              }
            }
          ' platformio.ini > .pio/ci_platformio.ini

      - name: Show PlatformIO system info
        run: |
          pio system info || true
          pio settings get || true

      - name: Build firmware (verbose, relax warnings)
        env:
          CPATH: components/FastLED/src
          CPLUS_INCLUDE_PATH: components/FastLED/src
        run: |
          pio run -v --project-conf .pio/ci_platformio.ini --environment esp32dev

      - name: Build LittleFS image
        env:
          CPATH: components/FastLED/src
          CPLUS_INCLUDE_PATH: components/FastLED/src
        run: |
          pio run --project-conf .pio/ci_platformio.ini --target buildfs --environment esp32dev

      - name: List output files
        run: ls -l .pio/build/esp32dev || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: esp32dev-artifacts
          path: |
            .pio/build/esp32dev/bootloader.bin
            .pio/build/esp32dev/partitions.bin
            .pio/build/esp32dev/firmware.bin
            .pio/build/esp32dev/littlefs.bin
          if-no-files-found: warn

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}-${{ github.run_number }}
          name: Release-${{ github.ref_name }}-${{ github.run_id }}-${{ github.run_number }}
          draft: false
          prerelease: false
          generate_release_notes: false
          files: |
            .pio/build/esp32dev/bootloader.bin
            .pio/build/esp32dev/partitions.bin
            .pio/build/esp32dev/firmware.bin
            .pio/build/esp32dev/littlefs.bin
