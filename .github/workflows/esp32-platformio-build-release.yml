name: ESP32 PlatformIO Build & Release

on:
  push:
    branches: [ main, develop, feature/** ]
    paths:
      - '**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11 (stable for PIO)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache PlatformIO core and packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
          key: pio-${{ runner.os }}-${{ hashFiles('platformio.ini', 'dependencies.lock') }}

      - name: Prepare PlatformIO directories
        run: |
          mkdir -p ~/.platformio/packages ~/.platformio/platforms ~/.platformio/cache || true

      - name: Install PlatformIO
        run: pip install --upgrade platformio

      - name: Show PlatformIO version
        run: pio --version

      - name: Show PlatformIO system info
        run: |
          pio system info || true
          pio settings get || true

      - name: Warm up build config (compiledb)
        env:
          CPATH: ${{ github.workspace }}/components/FastLED/src
          CPLUS_INCLUDE_PATH: ${{ github.workspace }}/components/FastLED/src
        run: |
          # Generate compile_commands.json and initialize CMake/IDF config
          pio run -e esp32dev -t compiledb -j 1 || true

      - name: Build firmware
        env:
          CPATH: ${{ github.workspace }}/components/FastLED/src
          CPLUS_INCLUDE_PATH: ${{ github.workspace }}/components/FastLED/src
        run: |
          # Build single-threaded to avoid occasional directory creation races
          pio run -e esp32dev -j 1

      - name: Build LittleFS image
        env:
          CPATH: ${{ github.workspace }}/components/FastLED/src
          CPLUS_INCLUDE_PATH: ${{ github.workspace }}/components/FastLED/src
        run: |
          pio run -e esp32dev -t buildfs -j 1

      - name: List output files
        run: ls -l .pio/build/esp32dev || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: esp32dev-artifacts
          path: |
            .pio/build/esp32dev/bootloader.bin
            .pio/build/esp32dev/partitions.bin
            .pio/build/esp32dev/firmware.bin
            .pio/build/esp32dev/littlefs.bin
          if-no-files-found: warn

      - name: Create GitHub Release and upload assets (tags only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            .pio/build/esp32dev/bootloader.bin
            .pio/build/esp32dev/partitions.bin
            .pio/build/esp32dev/firmware.bin
            .pio/build/esp32dev/littlefs.bin
